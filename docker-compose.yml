version: "3"

services:

  ### Workspace Utilities ##################################
  laravel:
    build:
      context: .
      dockerfile: ./php/Dockerfile
    container_name: laravel_workspace
    restart: unless-stopped
    tty: true
    working_dir: /var/www/laravel
    depends_on:
      - dbase
    volumes:
      - ./php/config.ini:/usr/local/etc/php/conf.d/config.ini
      - ./projects/demo/:/var/www/laravel # demo is the project name
    networks:
      - app-network

  ### NGINX Server #########################################
  nginx:
    depends_on:
      - dbase
      - laravel
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
    container_name: ${NGINX_CONTAINER_NAME}
    restart: unless-stopped
    tty: true
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
    volumes:
      - ./projects/demo/:/var/www/laravel  # demo is the project name
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    links:
    - laravel
    networks:
      - app-network

  ### MySQL ################################################
  dbase:
    image: mysql:8.0.36-debian
    container_name: docker_dbase
    restart: always
    tty: true
    ports:
      - "${MYSQL_PORT}:3306"
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/setup.sql
      - mysql_data:/var/lib/mysql
    networks:
      - app-network

  ### phpMyAdmin ###########################################
  phpmyadmin:
    container_name: docker_phpmyadmin
    depends_on:
      - dbase
    image: phpmyadmin
    restart: always
    ports:
      - "${PMA_PORT}:80"
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=dbase
      - MAX_EXECUTION_TIME=${PMA_MAX_EXECUTION_TIME}
      - MEMORY_LIMIT=${PMA_MEMORY_LIMIT}
      - UPLOAD_LIMIT=${PMA_UPLOAD_LIMIT}
    networks:
      - app-network

  ### mailhog ###########################################
  mailhog:
    container_name: mailhog
    image: mailhog/mailhog
    ports:
      - "${MAILHOG_HOST_HTTP_PORT}:1025"
      - "${MAILHOG_HOST_HTTPS_PORT}:8025"
    networks:
      - app-network

# Docker Networks ###########################################
networks:
  app-network:
    driver: bridge

volumes:
  mysql_data:
